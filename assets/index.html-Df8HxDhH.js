import{_ as e,c as r,a,o as n}from"./app-bU8DiWXV.js";const o={};function i(p,t){return n(),r("div",null,t[0]||(t[0]=[a('<div class="hint-container tip"><p class="hint-container-title">RAG（Retrieval-Augmented Generation）</p><p>RAG 是一种结合信息检索（Retrieval）与生成模型（Generation）的技术方法，通过引入外部知识库，在生成文本时动态补充知识，突破了传统生成模型知识固定和上下文依赖的局限性。它的核心在于通过检索与生成的协同作用，提升生成内容的准确性和相关性。</p></div><h2 id="rag的概念" tabindex="-1"><a class="header-anchor" href="#rag的概念"><span>RAG的概念</span></a></h2><p>RAG 的核心思路是结合两种技术：<mark class="note">检索模型</mark>和<mark class="note">生成模型</mark>。</p><p>传统的生成模型（如 GPT 系列）依赖于预训练过程中学习到的知识，这使得它在面对超出训练语料范围的问题时，可能生成不准确或过时的内容。</p><p>而 RAG 的设计理念在于 <strong><em>通过实时检索外部知识库中的相关信息，为生成模型提供更多上下文支持</em></strong>，从而生成更符合事实和用户需求的内容。</p><ul><li><strong>信息检索（Retrieval）</strong>：负责从外部知识库中找到与输入问题或任务相关的内容。这个过程通常需要一个高效的检索模型来处理查询并返回最相关的文档或片段。</li><li><strong>文本生成（Generation）</strong>：生成模型基于检索到的内容将其整合到生成的文本中，输出流畅且信息丰富的答案。</li></ul><p>RAG 的独特之处在于动态结合外部知识，而非单纯依赖模型内部的静态知识。这种方式不仅提高了生成内容的准确性，还使模型具备了实时更新知识的能力。</p><h2 id="rag的原理" tabindex="-1"><a class="header-anchor" href="#rag的原理"><span>RAG的原理</span></a></h2><p>RAG 的原理可以分为以下几个关键步骤：</p><ol><li><p><strong>输入处理</strong><br> 用户输入一个问题或查询，系统将其作为任务的起点。这一输入通常会被预处理为适合检索模型的查询格式。</p></li><li><p><strong>检索阶段</strong><br> 检索模型会根据输入问题，在外部知识库（例如维基百科、专业数据库等）中寻找最相关的内容。检索模型可以是传统的方法（如 BM25）或基于深度学习的向量检索模型（如 Dense Retriever）。</p><ul><li><strong>传统检索方法</strong>：基于关键词匹配的方式，例如 TF-IDF 或 BM25。</li><li><strong>深度学习检索方法</strong>：基于嵌入向量的语义匹配技术，如双塔模型（Dual Encoder），它能够捕捉语义层面的关联性，而不仅仅依赖于显性关键词。</li></ul><p><mark>检索阶段的输出通常是若干个高相关性的文档或文本片段，作为生成模型的输入。</mark></p></li><li><p><strong>生成阶段</strong><br> 生成模型（通常是 Transformer 架构的语言模型，如 GPT）将用户输入和检索到的内容结合起来，生成回答。这一过程中，生成模型需要对检索内容进行理解和整合，以确保生成的文本不仅流畅，还具备高度的相关性和事实性。</p></li><li><p><strong>输出答案</strong><br> 最终，生成的答案会被呈现给用户。答案的质量取决于检索内容的准确性与生成模型的语言能力。</p></li></ol><h2 id="rag的两种常见实现模式" tabindex="-1"><a class="header-anchor" href="#rag的两种常见实现模式"><span>RAG的两种常见实现模式</span></a></h2><p>根据检索内容与生成模型的结合方式，RAG 有两种常见的实现模式：</p><ol><li><p><strong>单次检索模式（RAG-Sequence）</strong></p><p>在这种模式下，检索模型从知识库中检索出一批相关文档，然后将这些文档一次性传递给生成模型进行回答生成。生成模型基于这些静态文档生成内容。</p><p>优点： 简单高效，适合对检索文档需求量较低的场景。</p><p>缺点： 如果初始检索结果不足，生成模型可能会因为缺乏信息而输出低质量答案。</p></li><li><p><strong>循环检索模式（RAG-Token）</strong></p><p>生成模型在生成每个词或句子时动态调用检索模型，从知识库中获取新的信息。这种模式更注重生成过程中检索与生成的深度协作。</p><p>优点： 能够根据生成过程中的需求动态补充信息，提高生成内容的准确性。</p><p>缺点： 计算成本较高，适合对准确性要求极高的任务。</p></li></ol><h2 id="rag的特性总结" tabindex="-1"><a class="header-anchor" href="#rag的特性总结"><span>RAG的特性总结</span></a></h2><p>RAG 的独特性在于它通过整合检索与生成的能力，实现了以下目标：</p><ul><li><strong>动态知识更新</strong>：生成模型可以随时从外部知识库中获取最新信息，而不依赖于静态的预训练知识。</li><li><strong>增强上下文理解</strong>：检索模型提供的相关文档能够显著提升生成模型对问题语境的理解能力。</li><li><strong>可扩展性</strong>：通过引入不同领域的知识库，RAG 可适应多种任务场景。</li></ul>',16)]))}const l=e(o,[["render",i]]),c=JSON.parse('{"path":"/article/5fg41zwh/","title":"浅谈RAG应用","lang":"zh-CN","frontmatter":{"title":"浅谈RAG应用","createTime":"2025/06/25 11:38:08","permalink":"/article/5fg41zwh/","tags":["RAG"],"excerpt":"这学期项目小组做了个黑神话悟空游戏助手的RAG应用，但是什么是“RAG”呢？这里简单梳理一下。","description":"RAG（Retrieval-Augmented Generation） RAG 是一种结合信息检索（Retrieval）与生成模型（Generation）的技术方法，通过引入外部知识库，在生成文本时动态补充知识，突破了传统生成模型知识固定和上下文依赖的局限性。它的核心在于通过检索与生成的协同作用，提升生成内容的准确性和相关性。 RAG的概念 RAG 的...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"浅谈RAG应用\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-01T16:52:49.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://try-catch.life/article/5fg41zwh/"}],["meta",{"property":"og:site_name","content":"码不停蹄"}],["meta",{"property":"og:title","content":"浅谈RAG应用"}],["meta",{"property":"og:description","content":"RAG（Retrieval-Augmented Generation） RAG 是一种结合信息检索（Retrieval）与生成模型（Generation）的技术方法，通过引入外部知识库，在生成文本时动态补充知识，突破了传统生成模型知识固定和上下文依赖的局限性。它的核心在于通过检索与生成的协同作用，提升生成内容的准确性和相关性。 RAG的概念 RAG 的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-01T16:52:49.000Z"}],["meta",{"property":"article:tag","content":"RAG"}],["meta",{"property":"article:modified_time","content":"2025-07-01T16:52:49.000Z"}]]},"readingTime":{"minutes":4.24,"words":1272},"git":{"createdTime":1750824748000,"updatedTime":1751388769000,"contributors":[{"name":"221250108","username":"221250108","email":"221250108@smail.nju.edu.cn","commits":6,"avatar":"https://avatars.githubusercontent.com/221250108?v=4","url":"https://github.com/221250108"}]},"autoDesc":true,"filePathRelative":"AI/浅谈RAG应用.md","headers":[],"categoryList":[{"id":"0a40e3","sort":10007,"name":"AI"}]}');export{l as comp,c as data};
