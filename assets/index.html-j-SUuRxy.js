import{_ as t,c as e,a as i,e as n,r as l,o as h}from"./app-B6CTy4hf.js";const k={};function p(r,s){const a=l("Mermaid");return h(),e("div",null,[s[0]||(s[0]=i(`<p>Cookie 和 Session 是 Web 开发中两个非常重要且紧密相关的概念，它们共同解决了 HTTP 协议无状态（Stateless）带来的问题。</p><h3 id="一、核心比喻" tabindex="-1"><a class="header-anchor" href="#一、核心比喻"><span>一、核心比喻</span></a></h3><p>为了更好地理解，我们可以用一个非常形象的比喻：</p><ul><li><strong>Session</strong> 就像你在<strong>银行保险箱</strong>里存放的贵重物品（你的会话数据）。</li><li><strong>Cookie</strong> 就像银行给你的<strong>保险箱钥匙</strong>（Session ID）。你每次去银行（访问网站），只需要出示这把钥匙（Cookie），银行就能找到对应的保险箱，让你存取里面的东西。</li><li><strong>没有这把钥匙（Cookie）</strong>，银行职员（服务器）就无法知道哪个保险箱是你的，你每次去都像一个陌生人。</li></ul><hr><h3 id="二、什么是-cookie" tabindex="-1"><a class="header-anchor" href="#二、什么是-cookie"><span>二、什么是 Cookie？</span></a></h3><p><strong>1. 定义：</strong></p><div class="hint-container tip"><p class="hint-container-title">Cookie</p><p>Cookie 是一小段文本信息（通常不超过 4KB），由<strong>服务器</strong>通过 HTTP 响应头（<code>Set-Cookie</code>）发送给<strong>客户端（通常是浏览器）</strong>。浏览器会将其保存起来，并在后续的每一次针对同一服务器的请求中，自动通过 HTTP 请求头（<code>Cookie</code>）将其带回给服务器。</p></div><p><strong>2. 主要特点：</strong></p><ul><li><mark class="note">存储在客户端</mark>：数据保存在用户的浏览器中。</li><li><mark class="note">有生命周期</mark>：可以设置过期时间。可以是“会话期 Cookie”（浏览器关闭即失效），也可以是“持久性 Cookie”（在设定的日期过后失效）。</li><li><mark class="note">自动携带</mark>：浏览器会在符合条件（域名、路径、过期时间等）的请求中自动携带相应的 Cookie，无需开发者手动处理。</li><li><mark class="note">不安全</mark>：因为存储在客户端，用户可以看到并可能修改 Cookie 内容。<strong>绝对不要在其中存储敏感信息（如密码）</strong>。</li></ul><p><strong>3. 常见用途：</strong></p><ul><li>用户登录状态保持（通常存储的是 Session ID）。</li><li>记录用户的个性化设置（如主题、语言偏好）。</li><li>记录用户行为（如购物车商品、浏览历史）。</li></ul><p><strong>4. 如何设置过期时间：</strong></p><p>Cookie 的生命周期可以通过以下两种主要方式设置：</p><ol><li><strong><code>expires</code></strong>：设置一个<strong>具体的过期日期/时间</strong>（GMT 格式）。</li><li><strong><code>max-age</code></strong>：设置一个以<strong>秒</strong>为单位的有效时长，从 cookie 被设置的那一刻开始计算。</li></ol><p><strong>最佳实践是优先使用 <code>max-age</code>，因为它更简单直观（基于相对时间，而非绝对时间）。</strong></p><hr><p>具体设置方法</p><p>设置 Cookie 是通过服务器在 HTTP 响应头中添加 <code>Set-Cookie</code> 字段来完成的。其基本语法如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>Set-Cookie: &lt;cookie-name&gt;=&lt;cookie-value&gt;; expires=&lt;GMT-date&gt;; max-age=&lt;seconds&gt;; path=/; domain=.example.com; Secure; HttpOnly</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>生命周期只关注 <code>expires</code> 和 <code>max-age</code> 部分。</p><ol><li>使用 <code>max-age</code>（推荐）</li></ol><p><code>max-age</code> 的值是一个数字，单位是秒。它告诉浏览器从接收到这个 Cookie 开始，多少秒之后这个 Cookie 会过期。</p><p><strong>示例：</strong></p><ul><li><p><strong>设置一个 1 小时后过期的 Cookie：</strong></p><div class="language-http line-numbers-mode" data-highlighter="shiki" data-ext="http" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-http"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">Set-Cookie:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> username=jinran; max-age=3600; path=/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>（因为 1小时 * 60分钟 * 60秒 = 3600 秒）</p></li><li><p><strong>设置一个 30 天后过期的 Cookie：</strong></p><div class="language-http line-numbers-mode" data-highlighter="shiki" data-ext="http" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-http"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">Set-Cookie:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> theme=dark; max-age=2592000; path=/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>（因为 30天 * 24小时 * 60分钟 * 60秒 = 2,592,000 秒）</p></li><li><p><strong>设置一个会话期 Cookie（浏览器关闭即失效）：</strong> 不设置 <code>expires</code> 或 <code>max-age</code> 属性即可。</p><div class="language-http line-numbers-mode" data-highlighter="shiki" data-ext="http" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-http"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">Set-Cookie:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> sessionid=abc123; path=/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>立即删除一个已存在的 Cookie：</strong> 将 <code>max-age</code> 设置为 <code>0</code> 或一个负数，并保证 Cookie 的 <code>name</code>, <code>path</code>, <code>domain</code> 等属性与要删除的 Cookie 完全一致。</p><div class="language-http line-numbers-mode" data-highlighter="shiki" data-ext="http" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-http"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">Set-Cookie:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> username=; max-age=0; path=/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><ol start="2"><li>使用 <code>expires</code></li></ol><p><code>expires</code> 的值是一个具体的 GMT 格式的日期时间字符串。它告诉浏览器这个 Cookie 在哪个确切的时间点之后会过期。</p><p><strong>示例：</strong></p><ul><li><p><strong>设置一个在 2030 年 1 月 1 日过期的 Cookie：</strong></p><div class="language-http line-numbers-mode" data-highlighter="shiki" data-ext="http" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-http"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">Set-Cookie:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> user_id=12345; expires=Tue, 01 Jan 2030 00:00:00 GMT; path=/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>设置一个 7 天后过期的 Cookie（需要代码计算日期）：</strong> 这通常在服务器端代码中动态计算完成。</p></li></ul><hr><p>在不同编程语言中的实现示例:</p><h4 id="在-node-js-express-中" tabindex="-1"><a class="header-anchor" href="#在-node-js-express-中"><span>在 Node.js (Express) 中</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-javascript"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> express</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> require</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">express</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> express</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">get</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/set-cookie</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">req</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> res</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 使用 max-age (推荐)</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  res</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cookie</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">username</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">jinran</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> maxAge</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 3600000</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> httpOnly</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> });</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 注意：Express 中 maxAge 单位是毫秒</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 使用 expires</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  const</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> expiryDate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> new</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Date</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Date</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">now</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 60</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 60</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1000</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 1小时后</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  res</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cookie</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">theme</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">dark</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> expires</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> expiryDate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> httpOnly</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 删除 Cookie</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  res</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cookie</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">username</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> maxAge</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  res</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">send</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Cookie has been set!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="在-python-flask-中" tabindex="-1"><a class="header-anchor" href="#在-python-flask-中"><span>在 Python (Flask) 中</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">from</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> flask </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Flask</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> make_response</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">from</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> datetime </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> datetime</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> timedelta</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">app </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Flask</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">__name__</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">route</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/set-cookie</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">def</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> set_cookie</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">():</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    resp </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> make_response</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Cookie set!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # 使用 max-age</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    resp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">set_cookie</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">username</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">jinran</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> max_age</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3600</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # 使用 expires (需要 datetime 对象)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    expiry_time </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> datetime</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">now</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> timedelta</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">days</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">30</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    resp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">set_cookie</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">theme</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">dark</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> expires</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">expiry_time</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> resp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:left;">你想要的效果</th><th style="text-align:left;">设置方法</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>创建一个持久 Cookie</strong></td><td style="text-align:left;">使用 <code>max-age=&lt;seconds&gt;</code>（推荐）或 <code>expires=&lt;GMT-date&gt;</code></td></tr><tr><td style="text-align:left;"><strong>创建一个会话期 Cookie</strong></td><td style="text-align:left;"><strong>不设置</strong> <code>max-age</code> 和 <code>expires</code> 属性</td></tr><tr><td style="text-align:left;"><strong>删除一个 Cookie</strong></td><td style="text-align:left;">设置 <code>max-age=0</code> 或 <code>expires</code> 为一个过去的时间点</td></tr></tbody></table><p>记住，在设置 Cookie 时，通常还应考虑其他重要属性，如：</p><ul><li><code>path=/</code>：确保 Cookie 在整个网站下都有效。</li><li><code>HttpOnly</code>：防止 JavaScript 访问，增强安全性（针对 XSS 攻击）。</li><li><code>Secure</code>：要求只能通过 HTTPS 协议传输 Cookie。</li><li><code>SameSite=Lax/Strict</code>：控制第三方跨站请求时是否发送 Cookie，针对 CSRF 攻击。</li></ul><hr><h3 id="三、什么是-session" tabindex="-1"><a class="header-anchor" href="#三、什么是-session"><span>三、什么是 Session？</span></a></h3><p><strong>1. 定义：</strong></p><div class="hint-container tip"><p class="hint-container-title">Session</p><p>Session 代表的是一次用户会话的过程。Session 数据<strong>存储在服务器端</strong>（如内存、数据库、文件系统中）。每个 Session 都有一个唯一的标识符，称为 <strong>Session ID</strong>。</p></div><p><strong>2. 主要特点：</strong></p><ul><li><mark class="note">存储在服务器端</mark>：数据保存在服务器上，相对安全。</li><li><mark class="note">依赖于客户端标识</mark>：服务器需要一种方式将每个客户端与其对应的 Session 数据关联起来，这个方式就是通过 Session ID。</li><li><mark class="note">可以存储更大量、更复杂的数据</mark>：因为数据在服务器端，不受 Cookie 的 4KB 大小限制。</li><li><mark class="note">有生命周期</mark>：通常会有一个超时时间。用户长时间不活动（例如30分钟），或者关闭浏览器（如果 Session ID 是会话期 Cookie），Session 可能会被服务器销毁。</li></ul><p><strong>3. 常见用途：</strong></p><ul><li>存储用户的登录凭证、用户 ID 等敏感信息。</li><li>存储购物车的完整内容。</li><li>在一次会话过程中需要临时保存的表单数据。</li></ul><hr><h3 id="四、联系与区别-表格对比" tabindex="-1"><a class="header-anchor" href="#四、联系与区别-表格对比"><span>四、联系与区别（表格对比）</span></a></h3><table><thead><tr><th style="text-align:left;">特性</th><th style="text-align:left;">Cookie</th><th style="text-align:left;">Session</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>存储位置</strong></td><td style="text-align:left;"><strong>客户端</strong>（浏览器）</td><td style="text-align:left;"><strong>服务器端</strong>（内存、数据库等）</td></tr><tr><td style="text-align:left;"><strong>安全性</strong></td><td style="text-align:left;"><strong>较低</strong>，用户可查看、修改</td><td style="text-align:left;"><strong>较高</strong>，数据存储在服务器，用户无法直接修改</td></tr><tr><td style="text-align:left;"><strong>数据类型与大小</strong></td><td style="text-align:left;">只支持字符串，单个大小通常限 <strong>4KB</strong></td><td style="text-align:left;">可支持任意数据类型（对象等），大小理论上只受服务器资源限制</td></tr><tr><td style="text-align:left;"><strong>生命周期</strong></td><td style="text-align:left;">可设置长期有效（持久Cookie）</td><td style="text-align:left;">通常有效时间较短（如用户 inactive 30分钟）</td></tr><tr><td style="text-align:left;"><strong>性能影响</strong></td><td style="text-align:left;">不占用服务器资源，但每次请求都会携带，增加带宽</td><td style="text-align:left;">占用服务器资源，用户量巨大时对服务器压力大</td></tr><tr><td style="text-align:left;"><strong>依赖关系</strong></td><td style="text-align:left;">可以独立使用，用于存储简单偏好</td><td style="text-align:left;"><strong>通常依赖 Cookie 来传递 Session ID</strong> 以识别用户身份</td></tr></tbody></table><hr><h3 id="五、它们如何协同工作-典型流程" tabindex="-1"><a class="header-anchor" href="#五、它们如何协同工作-典型流程"><span>五、它们如何协同工作？（典型流程）</span></a></h3><p>下图直观地展示了 Cookie 和 Session 在用户登录场景中是如何协同工作的：</p>`,52)),n(a,{id:"mermaid-412",code:"eJyFkstOwkAUhvc+xbyANd4Tomx0w9onqDAxjQrY4sYVmKiFgNRQoshV5RYIFBKVW5F3Qc60rPoKDhZQAsZZTCYz53znP/8cAZ+dY6cd73PsEc+eLiG63Czv4eycm3V6kCYXidhArDA+rZC3sF4QIVacCyWJEASeJi9m+LLVOr22oFUG6dXe8L6qde+0csxQgyQsDdpZLdaBblRXGqR+aaiimQpS6NPrA+Vay/gM1f8NnbJmuWsMGpaCuuKDmwrdKRfEOHTaB1gQOJeTRGskVKVgyF+eC5i3OShv55C3Qutdk9NElEBWBk3vOBzZ9ueKmZIsaJ1BEAlBW4bsq6E+HmDP8p7LdcxhCxLMbJtjlz20r66tMwwza8SEscGgQS8JlQczc6RLKv/UnvS6yMBNWl661Tq0y7FX+k0JAkUitaGZN3mmsgVq/jFxi35O4YWkpImsIPF/gFj7rSxI0jldeQalRS2YcfdPx7YptidDPIXcmBdcTvaEu8AOBNdXUG3RBvrexKCbgVx3RG/U9UgSrugEpA3V1/cmR5q/AO1galc="}),s[1]||(s[1]=i('<h3 id="六、其他实现方式-不使用-cookie-的-session" tabindex="-1"><a class="header-anchor" href="#六、其他实现方式-不使用-cookie-的-session"><span>六、其他实现方式：不使用 Cookie 的 Session</span></a></h3><p>虽然最常见的方式是通过 Cookie 传递 Session ID，但如果用户禁用了 Cookie，还可以通过其他方式传递，但都比较麻烦：</p><ol><li><strong>URL 重写</strong>：将 Session ID 作为 URL 的一个参数附加在每一个链接后面（例如：<code>http://example.com/index.php?sessionid=abc123</code>）。</li><li><strong>隐藏表单域</strong>：将 Session ID 放在表单的隐藏字段中，随着表单提交。</li></ol><p>但这些方法都不如 Cookie 方便和安全，因此现在绝大多数网站都要求启用 Cookie 才能正常使用。</p><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><ul><li><strong>Cookie 是客户端的存储机制，Session 是服务器端的存储机制。</strong></li><li><strong>Session 的实现通常需要 Cookie 来保存和传递身份凭证（Session ID）。</strong></li><li><strong>Cookie 适合存储不敏感、小量的数据；Session 适合存储敏感、大量的临时会话数据。</strong></li></ul><p>它们相辅相成，共同为我们提供了无缝、连续、个性化的上网体验。</p>',7))])}const o=t(k,[["render",p]]),g=JSON.parse('{"path":"/article/x36d7n9t/","title":"Cookie与Session","lang":"zh-CN","frontmatter":{"title":"Cookie与Session","createTime":"2025/08/20 11:53:04","permalink":"/article/x36d7n9t/","tags":["Cookie","Session"],"excerpt":"本文详细介绍了Cookie和Session的区别与联系。","description":"Cookie 和 Session 是 Web 开发中两个非常重要且紧密相关的概念，它们共同解决了 HTTP 协议无状态（Stateless）带来的问题。 一、核心比喻 为了更好地理解，我们可以用一个非常形象的比喻： Session 就像你在银行保险箱里存放的贵重物品（你的会话数据）。 Cookie 就像银行给你的保险箱钥匙（Session ID）。你每...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Cookie与Session\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-20T04:06:33.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://try-catch.life/article/x36d7n9t/"}],["meta",{"property":"og:site_name","content":"码不停蹄"}],["meta",{"property":"og:title","content":"Cookie与Session"}],["meta",{"property":"og:description","content":"Cookie 和 Session 是 Web 开发中两个非常重要且紧密相关的概念，它们共同解决了 HTTP 协议无状态（Stateless）带来的问题。 一、核心比喻 为了更好地理解，我们可以用一个非常形象的比喻： Session 就像你在银行保险箱里存放的贵重物品（你的会话数据）。 Cookie 就像银行给你的保险箱钥匙（Session ID）。你每..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-20T04:06:33.000Z"}],["meta",{"property":"article:tag","content":"Session"}],["meta",{"property":"article:tag","content":"Cookie"}],["meta",{"property":"article:modified_time","content":"2025-08-20T04:06:33.000Z"}]]},"readingTime":{"minutes":7.47,"words":2242},"git":{"createdTime":1755662793000,"updatedTime":1755662793000,"contributors":[{"name":"ziqingchuan","username":"ziqingchuan","email":"221250108@smail.nju.edu.cn","commits":1,"avatar":"https://avatars.githubusercontent.com/ziqingchuan?v=4","url":"https://github.com/ziqingchuan"}]},"autoDesc":true,"filePathRelative":"HTTP/Cookie与Session.md","headers":[],"categoryList":[{"id":"293c9e","sort":10000,"name":"HTTP"}]}');export{o as comp,g as data};
