import{_ as r,c as i,a as o,b as n,e,d as l,w as p,r as m,o as c}from"./app-BCtt0o8N.js";const s={};function h(T,t){const a=m("RouteLink");return c(),i("div",null,[t[2]||(t[2]=o('<h2 id="http1" tabindex="-1"><a class="header-anchor" href="#http1"><span>HTTP1</span></a></h2><ul><li>使用<mark>文本格式进行通信</mark>，易于阅读但效率较低。</li><li>每次请求都需要建立一个新的 TCP 连接，导致了<mark>较高的延迟</mark>。</li><li>支持管道化，但很少被使用，因为它<mark>可能导致队头阻塞问题</mark>。</li><li><mark>不支持多路复用</mark>，意味着每个请求都必须等待前一个请求完成才能开始。</li></ul><h2 id="http2" tabindex="-1"><a class="header-anchor" href="#http2"><span>HTTP2</span></a></h2><blockquote><p>基于SPDY：HTTP/2 基于 Google 的 SPDY 协议开发。</p></blockquote><ul><li>使用<mark>二进制格式进行通信</mark>，提高了数据传输的效率和安全性。</li><li><mark>引入了多路复用技术</mark>，允许通过单一的TCP连接并行发送多个请求和响应，大大减少了延迟。</li><li><mark>支持头部压缩</mark>，减少了不必要的数据传输量。</li><li><mark>提供了服务器推送功能</mark>，让服务器能够在客户端请求之前就主动发送资源到客户端缓存中。</li></ul><h2 id="http3" tabindex="-1"><a class="header-anchor" href="#http3"><span>HTTP3</span></a></h2><blockquote><p>基于QUIC：HTTP/3 使用 QUIC 协议而不是 TCP 作为其底层传输协议。</p></blockquote><ul><li><mark>使用 UDP 而不是 TCP</mark>，这减少了连接建立的时间，并提供了更快速的重连能力。</li><li>继续支持 HTTP/2 中引入的<mark>多路复用特性</mark>，但解决了由于网络切换或丢包引起的队头阻塞问题。</li><li>提供了<mark>更好的加密支持</mark>，默认情况下所有 HTTP/3 流量都是加密的。</li><li><mark>更快的握手过程</mark>，使得初始页面加载时间更短。</li></ul>',8)),n("p",null,[t[1]||(t[1]=e("了解HTTP请求的请求头/状态码/请求方法：",-1)),l(a,{to:"/HTTP/http%E7%9A%84%E8%AF%B7%E6%B1%82%E5%A4%B4%E3%80%81%E7%8A%B6%E6%80%81%E7%A0%81%E3%80%81%E8%AF%B7%E6%B1%82%E6%96%B9%E6%B3%95.html"},{default:p(()=>t[0]||(t[0]=[e("点击跳转",-1)])),_:1,__:[0]})])])}const u=r(s,[["render",h]]),P=JSON.parse('{"path":"/article/bvxodc2w/","title":"http1,http2,http3的区别","lang":"zh-CN","frontmatter":{"title":"http1,http2,http3的区别","tags":["HTTP"],"createTime":"2025/06/23 16:09:40","permalink":"/article/bvxodc2w/","excerpt":"本文从多个方向对比了HTTP1、HTTP2和HTTP3三个版本的主要特性。","description":"HTTP1 使用文本格式进行通信，易于阅读但效率较低。 每次请求都需要建立一个新的 TCP 连接，导致了较高的延迟。 支持管道化，但很少被使用，因为它可能导致队头阻塞问题。 不支持多路复用，意味着每个请求都必须等待前一个请求完成才能开始。 HTTP2 基于SPDY：HTTP/2 基于 Google 的 SPDY 协议开发。 使用二进制格式进行通信，提高...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"http1,http2,http3的区别\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-01T02:49:49.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://try-catch.life/article/bvxodc2w/"}],["meta",{"property":"og:site_name","content":"码不停蹄"}],["meta",{"property":"og:title","content":"http1,http2,http3的区别"}],["meta",{"property":"og:description","content":"HTTP1 使用文本格式进行通信，易于阅读但效率较低。 每次请求都需要建立一个新的 TCP 连接，导致了较高的延迟。 支持管道化，但很少被使用，因为它可能导致队头阻塞问题。 不支持多路复用，意味着每个请求都必须等待前一个请求完成才能开始。 HTTP2 基于SPDY：HTTP/2 基于 Google 的 SPDY 协议开发。 使用二进制格式进行通信，提高..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-01T02:49:49.000Z"}],["meta",{"property":"article:tag","content":"HTTP"}],["meta",{"property":"article:modified_time","content":"2025-09-01T02:49:49.000Z"}]]},"readingTime":{"minutes":1.46,"words":439},"git":{"createdTime":1750666511000,"updatedTime":1756694989000,"contributors":[{"name":"221250108","username":"221250108","email":"221250108@smail.nju.edu.cn","commits":6,"avatar":"https://avatars.githubusercontent.com/221250108?v=4","url":"https://github.com/221250108"},{"name":"ziqingchuan","username":"ziqingchuan","email":"221250108@smail.nju.edu.cn","commits":1,"avatar":"https://avatars.githubusercontent.com/ziqingchuan?v=4","url":"https://github.com/ziqingchuan"}]},"autoDesc":true,"filePathRelative":"HTTP/http1,http2,http3的区别.md","headers":[],"categoryList":[{"id":"293c9e","sort":10000,"name":"HTTP"}]}');export{u as comp,P as data};
